specVersion: 0.0.1
description: Subgraph for the FIAT smart contract system
repository: https://github.com/fiatdao/fiat-subgraph
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum/contract
    name: PRBProxyFactory
    network: {{network}}
    source:
      address: '{{PRBProxyFactory}}'
      abi: PRBProxyFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - UserProxy
      abis:
        - name: PRBProxyFactory
          file: ./abis/PRBProxyFactory.json
      eventHandlers:
        - event: DeployProxy(indexed address,indexed address,indexed address,bytes32,bytes32,address)
          handler: handleDeployProxy
      file: ./src/mappings.ts
  - kind: ethereum/contract
    name: Codex
    network: {{network}}
    source:
      address: '{{Codex}}'
      abi: Codex
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Position
        - PositionTransaction
        - Codex
        - Delegate
        - Balance
        - CollateralType
        - FIAT
      abis:
        - name: Codex
          file: ./abis/Codex.json
        - name: Collybus
          file: ./abis/Collybus.json
        - name: IVault
          file: ./abis/IVault.json
        - name: FIAT
          file: ./abis/Fiat.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: ModifyCollateralAndDebt(indexed address,indexed uint256,indexed address,address,address,int256,int256)
          handler: handleModifyCollateralAndDebt
        - event: TransferCollateralAndDebt(indexed address,indexed uint256,indexed address,address,int256,int256)
          handler: handleTransferCollateralAndDebt
        - event: ConfiscateCollateralAndDebt(indexed address,indexed uint256,indexed address,address,address,int256,int256)
          handler: handleConfiscateCollateralAndDebt
        - event: Init(indexed address)
          handler: handleVaultInit
        - event: GrantDelegate(indexed address,indexed address)
          handler: handleGrantDelegate
        - event: RevokeDelegate(indexed address,indexed address)
          handler: handleRevokeDelegate
        - event: Lock()
          handler: handleLock
        - event: ModifyBalance(indexed address,indexed uint256,indexed address,int256,uint256)
          handler: handleModifyBalance
        - event: TransferBalance(indexed address,indexed uint256,indexed address,address,uint256,uint256,uint256)
          handler: handleTransferBalance
        - event: SetParam(indexed address,indexed bytes32,uint256)
          handler: handleSetParam
      file: ./src/mappings.ts
  {{#Notional}}
  - kind: ethereum/contract
    name: Notional
    network: {{network}}
    source:
      address: '{{Notional}}'
      abi: Notional
      startBlock: {{notionalStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Vault
        - CollateralType
      abis:
        - name: Notional
          file: ./abis/Notional.json
        - name: ERC20
          file: ./abis/ERC20.json
        - name: Collybus
          file: ./abis/Collybus.json
        - name: IVault
          file: ./abis/IVault.json
        - name: VaultFC
          file: ./abis/VaultFC.json
      eventHandlers:
        - event: MarketsInitialized(uint16)
          handler: handleMarketsInitialized
      file: ./src/mappings.ts
  {{/Notional}}
  - kind: ethereum/contract
    name: FIAT
    network: {{network}}
    source:
      address: '{{FIAT}}'
      abi: FIAT
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - FIAT
        - FIATTokenBalance
        - FIATTokenAllowance
      abis:
        - name: FIAT
          file: ./abis/Fiat.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleFIATTransfer
        - event: Approval(indexed address,indexed address,uint256)
          handler: handleFIATApprovals
      file: ./src/mappings.ts
  - kind: ethereum/contract
    name: Collybus
    network: {{network}}
    source:
      address: '{{Collybus}}'
      abi: Collybus
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Collybus
        - CollybusSpot
        - CollybusDiscountRate
        - Vault
      abis:
        - name: Collybus
          file: ./abis/Collybus.json
        - name: IVault
          file: ./abis/IVault.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: SetParam(indexed address,indexed bytes32,uint256)
          handler: handleCollybusSetParam
        - event: UpdateSpot(indexed address,uint256)
          handler: handleCollybusUpdateSpot
        - event: UpdateDiscountRate(indexed uint256,uint256)
          handler: handleCollybusUpdateDiscountRate
      file: ./src/mappings.ts
  - kind: ethereum/contract
    name: CollateralAuction
    network: {{network}}
    source:
      address: '{{CollateralAuction}}'
      abi: CollateralAuction
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - CollateralAuction
        - Vault
        - CollateralType
        - UserProxy
      abis:
        - name: CollateralAuction
          file: ./abis/CollateralAuction.json
        - name: Collybus
          file: ./abis/Collybus.json
        - name: IVault
          file: ./abis/IVault.json
        - name: ERC20
          file: ./abis/ERC20.json
      eventHandlers:
        - event: StartAuction(indexed uint256,uint256,uint256,uint256,address,uint256,address,indexed address,uint256)
          handler: handleStartAuction
        - event: RedoAuction(indexed uint256,uint256,uint256,uint256,address,uint256,address,indexed address,uint256)
          handler: handleRedoAuction
        - event: TakeCollateral(indexed uint256,uint256,uint256,uint256,uint256,uint256,address,uint256,indexed address)
          handler: handleTakeCollateral
        - event: StopAuction(uint256)
          handler: handleStopAuction
        - event: SetParam(indexed bytes32,uint256)
          handler: handleAuctionSetParam
        - event: UpdateAuctionDebtFloor(indexed address,uint256)
          handler: handleUpdateAuctionDebtFloor
      file: ./src/mappings.ts
  - kind: ethereum/contract
    name: Publican
    network: {{network}}
    source:
      address: '{{Publican}}'
      abi: Publican
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - Vault
      abis:
        - name: Publican
          file: ./abis/Publican.json
      eventHandlers:
        - event: SetParam(indexed address,indexed bytes32,uint256)
          handler: handlePublicanSetParam
      file: ./src/mappings.ts
  - kind: ethereum/contract
    name: CCPFactory
    network: {{network}}
    source:
      address: '{{ConvergentCurvePoolFactory}}'
      abi: CCPFactory
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.5
      language: wasm/assemblyscript
      entities:
        - CollateralType
      abis:
        - name: CCPFactory
          file: ./abis/CCPFactory.json
        - name: ICCP
          file: ./abis/ICCP.json
      eventHandlers:
        - event: CCPoolCreated(indexed address,indexed address)
          handler: handleCCPoolCreated
      file: ./src/mappings.ts
