version: '3'

services:
  # anvil local chain
  # chain-1337:
  #   environment:
  #     - ALCHEMY_API_KEY=$ALCHEMY_API_KEY
  #   container_name: chain-1337-test
  #   image: ghcr.io/foundry-rs/foundry:nightly
  #   entrypoint: 'anvil --chain-id 1337 --host 0.0.0.0 --block-time 3 --gas-limit 50000000 --fork-url https://eth-mainnet.alchemyapi.io/v2/$ALCHEMY_API_KEY --fork-block-number 14515000'
  #   ports:
  #     - '8545:8545'

  # ganache local chain
  chain-1337:
    container_name: chain-1337
    image: trufflesuite/ganache:latest
    environment:
      - ALCHEMY_API_KEY=$ALCHEMY_API_KEY
    volumes:
      - ./data/ganache_data:/ganache_data
    ports:
      - '8545:8545'
    entrypoint: 'node /app/dist/node/cli.js -h="0.0.0.0" --fork.url="https://eth-mainnet.alchemyapi.io/v2/$ALCHEMY_API_KEY" --miner.defaultGasPrice 50000000000 --unlock="0xCFFAd3200574698b78f32232aa9D63eABD290703" --unlock="0x16b34ce9a6a6f7fc2dd25ba59bf7308e7b38e186" --unlock="0x3ddfa8ec3052539b6c9549f12cea2c295cff5296" --database.dbPath="/ganache_data"' # idk why non-0 blocktime but a lot of ppl seem to have it (--blockTime 3)
    # forking from the same block the graph starts indexing at
    # --fork.url https://eth-mainnet.alchemyapi.io/v2/$ALCHEMY_API_KEY@14515000 --database.dbPath /ganache_data


  graph-node:
    container_name: graph-node
    image: graphprotocol/graph-node:v0.26.0
    restart: on-failure
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
      - chain-1337
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://chain-1337:8545'
      # ethereum: 'mainnet:http://host.docker.internal:8545'

      GRAPH_LOG: info

  ipfs:
    container_name: ipfs-test
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
    volumes:
      - ./data/ipfs:/data/ipfs

  postgres:
    container_name: postgres
    image: postgres
    ports:
      - '5432:5432'
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

